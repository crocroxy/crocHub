-- Configuration
local Config = {
    Names = {}, -- List of names to highlight
    HighlightColor = Color3.fromRGB(255, 0, 0), -- Red highlight color
    HighlightTransparency = 0.5,
    NoclipKey = Enum.KeyCode.C,
    IsMobile = false, -- Will be set based on user choice
    ButtonPositions = {
        Noclip = UDim2.new(0.85, 0, 0.7, 0),
        GuiToggle = UDim2.new(0.85, 0, 0.8, 0)
    },
    Debug = true -- Enable debug logging
}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Variables
local Player = Players.LocalPlayer
local SolarisLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Stebulous/solaris-ui-lib/main/source.lua"))()
local Window
local ScreenGui
local IsMobile = false
local NoclipEnabled = false
local Highlights = {}
local NoclipKey = Enum.KeyCode.C
local GuiKey = Enum.KeyCode.RightShift
local Connections = {}
local LastError = 0 -- Used for error rate limiting
local NameButtons = {} -- Store references to name buttons

-- Error handling and logging
local function LogError(source, err)
    if not Config.Debug then return end
    
    -- Rate limit error messages (max 1 per second)
    local currentTime = tick()
    if currentTime - LastError < 1 then return end
    LastError = currentTime
    
    local errorMsg = string.format("[ERROR] [%s] %s", source, tostring(err))
    warn(errorMsg)
    
    -- Also show in-game notification for critical errors
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = "Script Error",
            Text = string.sub(tostring(err), 1, 40) .. "...",
            Duration = 3
        })
    end)
end

-- Functions
local function AddHighlight(object)
    if not Highlights[object] then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = Config.HighlightColor
        highlight.FillTransparency = Config.HighlightTransparency
        highlight.OutlineColor = Config.HighlightColor
        highlight.Parent = object
        Highlights[object] = highlight
    end
end

local function UpdateHighlights()
    for _, highlight in pairs(Highlights) do
        highlight:Destroy()
    end
    Highlights = {}

    for _, name in pairs(Config.Names) do
        for _, object in pairs(workspace:GetDescendants()) do
            if object.Name == name then
                AddHighlight(object)
            end
        end
    end
end

-- Noclip Function
local function ToggleNoclip()
    NoclipEnabled = not NoclipEnabled
    
    if NoclipEnabled then
        if not Connections.Noclip then
            Connections.Noclip = RunService.Stepped:Connect(function()
                if Player.Character then
                    for _, part in pairs(Player.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end)
        end
    else
        if Connections.Noclip then
            Connections.Noclip:Disconnect()
            Connections.Noclip = nil
            if Player.Character then
                for _, part in pairs(Player.Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                    end
                end
            end
        end
    end

    -- Update mobile button if it exists
    if IsMobile and ScreenGui then
        local noclipButton = ScreenGui:FindFirstChild("NoclipButton")
        if noclipButton then
            noclipButton.BackgroundColor3 = NoclipEnabled and Color3.fromRGB(40, 100, 40) or Color3.fromRGB(40, 40, 50)
        end
    end
end

-- Mobile Button Creation
local function CreateMobileButtons()
    if ScreenGui then ScreenGui:Destroy() end
    
    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "MobileButtons"
    ScreenGui.Parent = Player:WaitForChild("PlayerGui")

    -- Noclip Button
    local NoclipButton = Instance.new("TextButton")
    NoclipButton.Name = "NoclipButton"
    NoclipButton.Size = UDim2.new(0, 70, 0, 70)
    NoclipButton.Position = Config.ButtonPositions.Noclip
    NoclipButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    NoclipButton.Text = "Noclip"
    NoclipButton.Font = Enum.Font.GothamBold
    NoclipButton.TextSize = 14
    NoclipButton.BackgroundTransparency = 0.3
    NoclipButton.Parent = ScreenGui

    -- Make button circular
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(1, 0)
    UICorner.Parent = NoclipButton

    NoclipButton.MouseButton1Click:Connect(function()
        ToggleNoclip()
    end)
end

-- Initialize UI
local function InitializeUI()
    -- Create Window
    Window = SolarisLib:New({
        Name = "CroxyHub",
        FolderToSave = "CroxyHubSettings"
    })

    -- Main Tab
    local MainTab = Window:Tab("Main")
    local MainSection = MainTab:Section("Highlight Manager")

    -- Add name input
    MainSection:Textbox("Add Name to Highlight", true, function(text)
        if text ~= "" and not table.find(Config.Names, text) then
            table.insert(Config.Names, text)
            UpdateHighlights()
            SolarisLib:Notification("Name Added", "Added " .. text .. " to highlight list")
        end
    end)

    -- Noclip Toggle
    MainSection:Toggle("Noclip", false, "NoclipToggle", function(t)
        if t ~= NoclipEnabled then
            ToggleNoclip()
        end
    end)

    -- Settings Tab
    local SettingsTab = Window:Tab("Settings")
    local SettingsSection = SettingsTab:Section("Settings")

    -- Noclip Keybind
    SettingsSection:Bind("Noclip Keybind", NoclipKey, false, "NoclipBind", function()
        ToggleNoclip()
    end)

    -- GUI Toggle Keybind
    SettingsSection:Bind("GUI Toggle", GuiKey, false, "GUIBind", function()
        -- The library handles the toggle automatically
    end)

    -- Mobile Settings
    if IsMobile then
        local MobileSection = SettingsTab:Section("Mobile Settings")
        
        -- Noclip Button Position
        MobileSection:Slider("Noclip X", Config.ButtonPositions.Noclip.X.Scale * 100, 100, 0, 1, "NoclipX", function(value)
            Config.ButtonPositions.Noclip = UDim2.new(value/100, 0, Config.ButtonPositions.Noclip.Y.Scale, 0)
            if ScreenGui then
                local button = ScreenGui:FindFirstChild("NoclipButton")
                if button then
                    button.Position = Config.ButtonPositions.Noclip
                end
            end
        end)

        MobileSection:Slider("Noclip Y", Config.ButtonPositions.Noclip.Y.Scale * 100, 100, 0, 1, "NoclipY", function(value)
            Config.ButtonPositions.Noclip = UDim2.new(Config.ButtonPositions.Noclip.X.Scale, 0, value/100, 0)
            if ScreenGui then
                local button = ScreenGui:FindFirstChild("NoclipButton")
                if button then
                    button.Position = Config.ButtonPositions.Noclip
                end
            end
        end)
    end

    -- Watch for new objects to highlight
    workspace.DescendantAdded:Connect(function(object)
        if table.find(Config.Names, object.Name) then
            AddHighlight(object)
        end
    end)

    -- PC Keybind for noclip
    if not IsMobile then
        UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed and input.KeyCode == NoclipKey then
                ToggleNoclip()
            end
        end)
    end
end

-- Device Selection Prompt
local function CreateDevicePrompt()
    local PromptGui = Instance.new("ScreenGui")
    PromptGui.Name = "DevicePrompt"
    PromptGui.Parent = Player:WaitForChild("PlayerGui")

    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 300, 0, 200)
    Frame.Position = UDim2.new(0.5, -150, 0.5, -100)
    Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    Frame.BorderSizePixel = 0
    Frame.Parent = PromptGui

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Text = "Select Your Device"
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 20
    Title.Parent = Frame

    local MobileButton = Instance.new("TextButton")
    MobileButton.Size = UDim2.new(0.8, 0, 0, 50)
    MobileButton.Position = UDim2.new(0.1, 0, 0.3, 0)
    MobileButton.BackgroundColor3 = Color3.fromRGB(40, 100, 40)
    MobileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MobileButton.Text = "Mobile"
    MobileButton.Font = Enum.Font.GothamBold
    MobileButton.TextSize = 16
    MobileButton.Parent = Frame

    local PCButton = Instance.new("TextButton")
    PCButton.Size = UDim2.new(0.8, 0, 0, 50)
    PCButton.Position = UDim2.new(0.1, 0, 0.6, 0)
    PCButton.BackgroundColor3 = Color3.fromRGB(40, 100, 40)
    PCButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    PCButton.Text = "PC"
    PCButton.Font = Enum.Font.GothamBold
    PCButton.TextSize = 16
    PCButton.Parent = Frame

    MobileButton.MouseButton1Click:Connect(function()
        IsMobile = true
        PromptGui:Destroy()
        CreateMobileButtons()
        InitializeUI()
    end)

    PCButton.MouseButton1Click:Connect(function()
        IsMobile = false
        PromptGui:Destroy()
        InitializeUI()
    end)
end

-- Start with device prompt
CreateDevicePrompt()

