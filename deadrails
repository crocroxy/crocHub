local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

-- Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Settings
local Settings = {
    NoClipEnabled = false,
    NoClipKeybind = Enum.KeyCode.C,
    HighlightColor = Color3.fromRGB(255, 0, 0),
    HighlightedObjects = {}
}

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "NoClip & Highlight",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by Your Name",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "NoClipHighlight",
        FileName = "Config"
    }
})

-- Create Tabs
local MainTab = Window:CreateTab("Main", 4483362458)
local SettingsTab = Window:CreateTab("Settings", 4483362458)

-- NoClip Function
local function ToggleNoClip()
    Settings.NoClipEnabled = not Settings.NoClipEnabled
    Rayfield:Notify({
        Title = "NoClip",
        Content = Settings.NoClipEnabled and "Enabled" or "Disabled",
        Duration = 2
    })
end

-- Highlight Function
local function HighlightObject(objectName)
    -- Search in workspace and its descendants
    local function searchInFolder(folder)
        for _, object in ipairs(folder:GetChildren()) do
            if object.Name == objectName then
                if not Settings.HighlightedObjects[object] then
                    local highlight = Instance.new("Highlight")
                    highlight.FillColor = Settings.HighlightColor
                    highlight.OutlineColor = Settings.HighlightColor
                    highlight.Parent = object
                    Settings.HighlightedObjects[object] = highlight
                end
            end
            if #object:GetChildren() > 0 then
                searchInFolder(object)
            end
        end
    end
    
    searchInFolder(game.Workspace)
end

-- Create UI Elements
MainTab:CreateToggle({
    Name = "NoClip Toggle",
    CurrentValue = false,
    Flag = "NoClipToggle",
    Callback = function(Value)
        Settings.NoClipEnabled = Value
    end,
})

MainTab:CreateTextbox({
    Name = "Highlight Object",
    PlaceholderText = "Enter object name",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        if Text ~= "" then
            HighlightObject(Text)
        end
    end,
})

SettingsTab:CreateKeybind({
    Name = "NoClip Keybind",
    CurrentKeybind = "C",
    HoldToInteract = false,
    Flag = "NoClipKeybind",
    Callback = function(Keybind)
        Settings.NoClipKeybind = Keybind
    end,
})

-- NoClip Connection
RunService.Stepped:Connect(function()
    if Settings.NoClipEnabled and Character and Humanoid then
        for _, part in ipairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Keybind Connection
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Settings.NoClipKeybind then
        ToggleNoClip()
    end
end)

-- Character Added Connection
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
end)

-- Clean up highlights when objects are removed
game.Workspace.DescendantRemoving:Connect(function(object)
    if Settings.HighlightedObjects[object] then
        Settings.HighlightedObjects[object]:Destroy()
        Settings.HighlightedObjects[object] = nil
    end
end)
