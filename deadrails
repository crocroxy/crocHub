-- Configuration
local Config = {
    Names = {}, -- List of names to highlight
    HighlightColor = Color3.fromRGB(255, 0, 0), -- Red highlight color
    HighlightTransparency = 0.5,
    NoclipKey = Enum.KeyCode.C,
    IsMobile = false, -- Will be set based on user choice
    ButtonPositions = {
        Noclip = UDim2.new(0.85, 0, 0.7, 0),
        GuiToggle = UDim2.new(0.85, 0, 0.8, 0)
    }
}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

-- Variables
local Player = Players.LocalPlayer
local Noclip = false
local Highlights = {}
local Connections = {} -- Store all connections for cleanup

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "HighlightGUI"
ScreenGui.Parent = Player:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Text = "Highlight Manager"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.Parent = MainFrame

local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Name = "ScrollFrame"
ScrollFrame.Size = UDim2.new(1, -20, 1, -80)
ScrollFrame.Position = UDim2.new(0, 10, 0, 40)
ScrollFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
ScrollFrame.BorderSizePixel = 0
ScrollFrame.ScrollBarThickness = 6
ScrollFrame.Parent = MainFrame

local AddBox = Instance.new("TextBox")
AddBox.Name = "AddBox"
AddBox.Size = UDim2.new(0.7, 0, 0, 30)
AddBox.Position = UDim2.new(0, 10, 1, -35)
AddBox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
AddBox.TextColor3 = Color3.fromRGB(255, 255, 255)
AddBox.PlaceholderText = "Enter name to highlight..."
AddBox.Font = Enum.Font.Gotham
AddBox.TextSize = 14
AddBox.Parent = MainFrame

local AddButton = Instance.new("TextButton")
AddButton.Name = "AddButton"
AddButton.Size = UDim2.new(0.25, 0, 0, 30)
AddButton.Position = UDim2.new(0.75, 0, 1, -35)
AddButton.BackgroundColor3 = Color3.fromRGB(40, 100, 40)
AddButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AddButton.Text = "Add"
AddButton.Font = Enum.Font.GothamBold
AddButton.TextSize = 14
AddButton.Parent = MainFrame

-- Functions
local function UpdateList()
    for _, child in pairs(ScrollFrame:GetChildren()) do
        child:Destroy()
    end
    
    local YPos = 5
    for _, name in pairs(Config.Names) do
        local ItemFrame = Instance.new("Frame")
        ItemFrame.Size = UDim2.new(1, -10, 0, 30)
        ItemFrame.Position = UDim2.new(0, 5, 0, YPos)
        ItemFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        ItemFrame.Parent = ScrollFrame
        
        local NameLabel = Instance.new("TextLabel")
        NameLabel.Size = UDim2.new(0.7, 0, 1, 0)
        NameLabel.BackgroundTransparency = 1
        NameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        NameLabel.Text = name
        NameLabel.Font = Enum.Font.Gotham
        NameLabel.TextSize = 14
        NameLabel.Parent = ItemFrame
        
        local RemoveButton = Instance.new("TextButton")
        RemoveButton.Size = UDim2.new(0.25, 0, 1, -6)
        RemoveButton.Position = UDim2.new(0.73, 0, 0, 3)
        RemoveButton.BackgroundColor3 = Color3.fromRGB(100, 40, 40)
        RemoveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        RemoveButton.Text = "Remove"
        RemoveButton.Font = Enum.Font.GothamBold
        RemoveButton.TextSize = 12
        RemoveButton.Parent = ItemFrame
        
        RemoveButton.MouseButton1Click:Connect(function()
            table.remove(Config.Names, table.find(Config.Names, name))
            UpdateList()
            UpdateHighlights()
        end)
        
        YPos = YPos + 35
    end
end

local function AddHighlight(object)
    if not Highlights[object] then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = Config.HighlightColor
        highlight.FillTransparency = Config.HighlightTransparency
        highlight.OutlineColor = Config.HighlightColor
        highlight.Parent = object
        Highlights[object] = highlight
    end
end

local function UpdateHighlights()
    -- Clear existing highlights
    for object, highlight in pairs(Highlights) do
        highlight:Destroy()
    end
    Highlights = {}
    
    -- Add new highlights
    local function CheckObject(object)
        if table.find(Config.Names, object.Name) then
            AddHighlight(object)
        end
    end
    
    local function ScanFolder(folder)
        for _, object in pairs(folder:GetChildren()) do
            CheckObject(object)
            if object:IsA("Folder") or object:IsA("Model") then
                ScanFolder(object)
            end
        end
    end
    
    ScanFolder(workspace)
end

-- GUI Events
AddButton.MouseButton1Click:Connect(function()
    local name = AddBox.Text
    if name ~= "" and not table.find(Config.Names, name) then
        table.insert(Config.Names, name)
        AddBox.Text = ""
        UpdateList()
        UpdateHighlights()
    end
end)

-- Function to make frame draggable
local function MakeDraggable(frame)
    local dragToggle = nil
    local dragSpeed = 0.25
    local dragStart = nil
    local startPos = nil

    local function UpdateInput(input)
        local delta = input.Position - dragStart
        local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
    end

    frame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragToggle = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragToggle then
                UpdateInput(input)
            end
        end
    end)
end

-- Function to create settings tab
local function CreateSettingsTab()
    local SettingsFrame = Instance.new("Frame")
    SettingsFrame.Name = "SettingsFrame"
    SettingsFrame.Size = UDim2.new(1, 0, 1, -30) -- Leave space for tabs
    SettingsFrame.Position = UDim2.new(0, 0, 0, 30)
    SettingsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    SettingsFrame.BorderSizePixel = 0
    SettingsFrame.Visible = false
    SettingsFrame.Parent = MainFrame

    -- Create settings for button positions
    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 30)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Text = "Button Positions"
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 16
    Title.Parent = SettingsFrame

    local function CreatePositionSliders(buttonName, defaultPos, yOffset)
        local Container = Instance.new("Frame")
        Container.Size = UDim2.new(0.9, 0, 0, 60)
        Container.Position = UDim2.new(0.05, 0, 0, yOffset)
        Container.BackgroundTransparency = 1
        Container.Parent = SettingsFrame

        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, 0, 0, 20)
        Label.BackgroundTransparency = 1
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.Text = buttonName .. " Button Position"
        Label.Font = Enum.Font.Gotham
        Label.TextSize = 14
        Label.Parent = Container

        local XSlider = Instance.new("TextBox")
        XSlider.Size = UDim2.new(0.45, 0, 0, 30)
        XSlider.Position = UDim2.new(0, 0, 0, 25)
        XSlider.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        XSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
        XSlider.Text = tostring(defaultPos.X.Scale)
        XSlider.PlaceholderText = "X Position (0-1)"
        XSlider.Font = Enum.Font.Gotham
        XSlider.TextSize = 14
        XSlider.Parent = Container

        local YSlider = Instance.new("TextBox")
        YSlider.Size = UDim2.new(0.45, 0, 0, 30)
        YSlider.Position = UDim2.new(0.55, 0, 0, 25)
        YSlider.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        YSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
        YSlider.Text = tostring(defaultPos.Y.Scale)
        YSlider.PlaceholderText = "Y Position (0-1)"
        YSlider.Font = Enum.Font.Gotham
        YSlider.TextSize = 14
        YSlider.Parent = Container

        -- Update position when values change
        local function UpdatePosition()
            local x = tonumber(XSlider.Text) or defaultPos.X.Scale
            local y = tonumber(YSlider.Text) or defaultPos.Y.Scale
            x = math.clamp(x, 0, 1)
            y = math.clamp(y, 0, 1)
            Config.ButtonPositions[buttonName] = UDim2.new(x, 0, y, 0)
            
            -- Update button position if it exists
            local button = ScreenGui:FindFirstChild(buttonName.."Button")
            if button then
                button.Position = Config.ButtonPositions[buttonName]
            end
        end

        XSlider.FocusLost:Connect(UpdatePosition)
        YSlider.FocusLost:Connect(UpdatePosition)
    end

    CreatePositionSliders("Noclip", Config.ButtonPositions.Noclip, 40)
    CreatePositionSliders("GuiToggle", Config.ButtonPositions.GuiToggle, 120)

    return SettingsFrame
end

-- Function to create mobile buttons
local function CreateMobileButton()
    -- Create Noclip Button
    local NoclipButton = Instance.new("TextButton")
    NoclipButton.Name = "NoclipButton"
    NoclipButton.Size = UDim2.new(0, 70, 0, 70)
    NoclipButton.Position = Config.ButtonPositions.Noclip
    NoclipButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    NoclipButton.Text = "Noclip"
    NoclipButton.Font = Enum.Font.GothamBold
    NoclipButton.TextSize = 14
    NoclipButton.BackgroundTransparency = 0.3
    NoclipButton.Parent = ScreenGui

    -- Create GUI Toggle Button
    local GuiToggleButton = Instance.new("TextButton")
    GuiToggleButton.Name = "GuiToggleButton"
    GuiToggleButton.Size = UDim2.new(0, 70, 0, 70)
    GuiToggleButton.Position = Config.ButtonPositions.GuiToggle
    GuiToggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    GuiToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    GuiToggleButton.Text = "GUI"
    GuiToggleButton.Font = Enum.Font.GothamBold
    GuiToggleButton.TextSize = 14
    GuiToggleButton.BackgroundTransparency = 0.3
    GuiToggleButton.Parent = ScreenGui

    -- Make buttons circular
    for _, button in pairs({NoclipButton, GuiToggleButton}) do
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(1, 0)
        UICorner.Parent = button
    end

    -- Add click handlers
    NoclipButton.MouseButton1Click:Connect(function()
        Noclip = not Noclip
        NoclipButton.BackgroundColor3 = Noclip and Color3.fromRGB(40, 100, 40) or Color3.fromRGB(40, 40, 50)
        StarterGui:SetCore("SendNotification", {
            Title = "Noclip",
            Text = Noclip and "Enabled" or "Disabled",
            Duration = 2
        })
    end)

    GuiToggleButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = not MainFrame.Visible
    end)
end

-- Function to create device selection prompt
local function CreateDevicePrompt()
    local PromptGui = Instance.new("ScreenGui")
    PromptGui.Name = "DevicePrompt"
    PromptGui.Parent = Player:WaitForChild("PlayerGui")

    local PromptFrame = Instance.new("Frame")
    PromptFrame.Size = UDim2.new(0, 300, 0, 200)
    PromptFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
    PromptFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    PromptFrame.BorderSizePixel = 0
    PromptFrame.Parent = PromptGui

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Text = "Select Your Device"
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 20
    Title.Parent = PromptFrame

    local MobileButton = Instance.new("TextButton")
    MobileButton.Size = UDim2.new(0.8, 0, 0, 50)
    MobileButton.Position = UDim2.new(0.1, 0, 0.3, 0)
    MobileButton.BackgroundColor3 = Color3.fromRGB(40, 100, 40)
    MobileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MobileButton.Text = "Mobile"
    MobileButton.Font = Enum.Font.GothamBold
    MobileButton.TextSize = 16
    MobileButton.Parent = PromptFrame

    local PCButton = Instance.new("TextButton")
    PCButton.Size = UDim2.new(0.8, 0, 0, 50)
    PCButton.Position = UDim2.new(0.1, 0, 0.6, 0)
    PCButton.BackgroundColor3 = Color3.fromRGB(40, 100, 40)
    PCButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    PCButton.Text = "PC"
    PCButton.Font = Enum.Font.GothamBold
    PCButton.TextSize = 16
    PCButton.Parent = PromptFrame

    -- Add handlers
    MobileButton.MouseButton1Click:Connect(function()
        Config.IsMobile = true
        PromptGui:Destroy()
        CreateMobileButton()
        InitializeScript()
    end)

    PCButton.MouseButton1Click:Connect(function()
        Config.IsMobile = false
        PromptGui:Destroy()
        InitializeScript()
    end)
end

-- Function to initialize the script
local function InitializeScript()
    CreateGUI()
    if Config.IsMobile then
        CreateMobileButton()
    end
    
    UpdateList()
    UpdateHighlights()

    -- Set up noclip based on device type
    if Config.IsMobile then
        -- Mobile noclip is handled by the button
    else
        -- PC noclip keyboard handler
        Connections.noclipInput = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed and input.KeyCode == Config.NoclipKey then
                Noclip = not Noclip
                StarterGui:SetCore("SendNotification", {
                    Title = "Noclip",
                    Text = Noclip and "Enabled" or "Disabled",
                    Duration = 2
                })
            end
        end)
    end

    -- Set up noclip loop
    Connections.noclipLoop = game:GetService("RunService").Stepped:Connect(function()
        if Noclip then
            local character = Player.Character
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end
    end)

    -- Watch for new objects
    Connections.objectAdded = workspace.DescendantAdded:Connect(function(object)
        if table.find(Config.Names, object.Name) then
            AddHighlight(object)
        end
    end)

    Connections.objectRemoving = workspace.DescendantRemoving:Connect(function(object)
        if Highlights[object] then
            Highlights[object]:Destroy()
            Highlights[object] = nil
        end
    end)

    -- Set up chat command
    Connections.chatCommand = Players.LocalPlayer.Chatted:Connect(function(message)
        if message:lower() == "/unload" then
            UnloadScript()
        end
    end)
end

-- Function to unload the script
local function UnloadScript()
    -- Disable noclip if it's enabled and restore collision
    if Noclip then
        Noclip = false
        local character = Player.Character
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
        StarterGui:SetCore("SendNotification", {
            Title = "Noclip",
            Text = "Disabled",
            Duration = 2
        })
    end
    
    -- Remove all highlights
    for object, highlight in pairs(Highlights) do
        highlight:Destroy()
    end
    Highlights = {}
    
    -- Clear the names list
    table.clear(Config.Names)
    
    -- Remove the GUI
    if ScreenGui then
        ScreenGui:Destroy()
    end
    
    -- Disconnect all connections
    for _, connection in pairs(Connections) do
        if connection.Disconnect then
            connection:Disconnect()
        end
    end
    
    -- Notify user
    StarterGui:SetCore("SendNotification", {
        Title = "Script",
        Text = "Successfully unloaded",
        Duration = 2
    })
end

-- Start with device prompt
CreateDevicePrompt()

